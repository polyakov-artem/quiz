{"version":3,"sources":["Components/ToggleBtn/ToggleBtn.js","Components/Button/Button.js","Components/SideMenu/SideMenu.js","Components/Backdrop/Backdrop.js","Container/Layout/Layout.js","Components/QuizItem/QuizItem.js","Components/QuizResults/QuizResults.js","Components/Loader/Loader.js","axios/axios.js","Container/Quiz/Quiz.js","Components/QuizPage/QuizPage.js","Components/Input/Input.js","Components/AuthForm/AuthForm.js","Container/AuthPage/AuthPage.js","Components/Select/Select.js","Container/CreateTestForm/CreateTestForm.js","Components/CreateTestPage/CreateTestPage.js","Container/QuizListPage/QuizListPage.js","App.js","serviceWorker.js","index.js"],"names":["ToggleBtn_ToggleBtn","props","menuIsOpen","toggleMenu","classArr","push","react_default","a","createElement","type","className","join","onClick","Button_Button","theme","disabled","_props$type","classes","concat","children","SideMenu","authorized","closeMenu","this","links","to","label","exact","id","map","link","key","NavLink","_this","Consumer","context","renderLinks","logoutHandler","Component","Backdrop_Backdrop","Layout","state","setState","Fragment","Components_SideMenu_SideMenu","QuizItem","question","numberOfQuestion","numOfQuestions","answers","answer","index","stateClass","answerState","chosenAnswerId","chooseHandler","bind","text","QuizResults","numOfCorrect","answersArray","reduce","total","currentItem","item","iconClasses","quiz","length","navigateToList","retryHandler","Loader","axios","create","baseURL","Quiz","isFinished","loading","history","pathname","_this$state","Object","objectSpread","toConsumableArray","rightAnswerId","setTimeout","get","match","params","response","data","console","log","_context","t0","_this$state2","quizItem","QuizResults_QuizResults","Loader_Loader","Components_QuizItem_QuizItem","withRouter","QuizPage","Container_Quiz_Quiz","Input","htmlFor","_props$value","value","onChange","isValid","errorMessage","touched","initialState","authError","isFormValid","inputs","email","valid","validation","required","password","minLength","AuthForm","onChangeHandler","inputName","event","input","target","validateControl","keys","every","resetForm","getAuthData","returnSecureToken","loginHandler","_callee","authData","regenerator_default","wrap","prev","next","post","sent","registered","stop","registerHandler","_callee2","_context2","submitHandler","action","preventDefault","trim","_this2","Input_Input","onSubmit","renderInputs","AuthPage","Components_AuthForm_AuthForm","React","Select","sendError","submitting","option1","option2","option3","option4","CreateTestForm","addQuestion","_this$state$inputs","createTest","e","selectChangeHandler","Select_Select","CreateTestPage","Container_CreateTestForm_CreateTestForm","QuizListPage","quizes","isListLoaded","quizKey","name","list","renderQuizes","createContext","Provider","App","Container_Layout_Layout","Switch","Route","path","component","Boolean","window","location","hostname","app","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.526e663c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './ToggleBtn.scss';\r\n\r\n\r\nexport default props => {\r\n  let {menuIsOpen, toggleMenu} = props;\r\n\r\n  const classArr =[ 'fa', 'toggle-btn' ]\r\n\r\n  menuIsOpen\r\n    ? classArr.push('fa-times', 'toggle-btn_is_active')\r\n    : classArr.push('fa-bars');\r\n\r\n  return (\r\n    <button\r\n      type='button'\r\n      className = {classArr.join(' ')}\r\n      onClick = {toggleMenu} \r\n    />\r\n  ) \r\n}","import React from 'react';\r\nimport './Button.scss';\r\n\r\nexport default props => {\r\n  const {theme, disabled, onClick, type='button', classes}= props;\r\n  const classArr =[\r\n    'btn',\r\n    theme? `btn_theme_${theme}`: '',\r\n    disabled? `btn_is_disabled`: '',\r\n    classes\r\n  ];\r\n\r\n  return (\r\n    <button\r\n      type = {type}\r\n      className = {classArr.join(' ')}\r\n      onClick = {onClick} \r\n      disabled = {disabled}>\r\n      {props.children}\r\n    </button>\r\n  )\r\n}","import React, {Component} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport './SideMenu.scss';\r\nimport Button from '../Button/Button';\r\nimport { Consumer } from '../../App';\r\n\r\n\r\n\r\nclass SideMenu extends Component{\r\n  \r\n  renderLinks(authorized){\r\n    const {closeMenu} = this.props;\r\n    const links = [\r\n      {to: '/quiz/', label:'Список тестов', exact: true, id: 1},\r\n    ];\r\n\r\n    authorized\r\n      ? links.push({to: '/quiz/quiz-creator', label:'Создать тест', exact: false, id: 3})\r\n      : links.push({to: '/quiz/auth', label:'Авторизация', exact: false, id: 2});\r\n\r\n    return links.map((link)=>{\r\n      return (\r\n        <li\r\n          className = 'side-menu__item'\r\n          key = {link.id}>\r\n          <NavLink\r\n            className = 'side-menu__link'\r\n            to={link.to}\r\n            exact = {link.exact}\r\n            onClick = {closeMenu}>\r\n            {link.label}\r\n          </NavLink> \r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  render(){\r\n    const {menuIsOpen} = this.props;\r\n\r\n    return(\r\n      <Consumer>\r\n        {context=>(\r\n          <div className = {`side-menu ${menuIsOpen? '': 'side-menu_is_closed'}`}>\r\n            <nav>\r\n              <ul className = 'side-menu__list'>\r\n                {this.renderLinks(context.authorized)}\r\n              </ul>\r\n            </nav>\r\n            <Button \r\n              theme ='info'\r\n              onClick={context.logoutHandler}>\r\n              Выйти\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SideMenu","import React from 'react'\r\nimport './Backdrop.css';\r\n\r\n\r\nexport default props => {\r\n  return (\r\n      <div className = 'backdrop' onClick = {props.onClick}> </div>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport ToggleBtn from '../../Components/ToggleBtn/ToggleBtn';\r\nimport SideMenu from '../../Components/SideMenu/SideMenu';\r\nimport Backdrop from '../../Components/Backdrop/Backdrop';\r\n\r\nimport './Layout.css';\r\n\r\n\r\nclass Layout extends Component{\r\n  state = {\r\n    menuIsOpen: false\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    this.setState ({\r\n      menuIsOpen: !this.state.menuIsOpen\r\n    })\r\n  }\r\n\r\n  closeMenu = () => {\r\n    this.setState ({\r\n      menuIsOpen: false\r\n    })\r\n  }\r\n\r\n  render(){\r\n    let {menuIsOpen} = this.state\r\n    return(\r\n      <React.Fragment>\r\n        <SideMenu menuIsOpen = {menuIsOpen} closeMenu = {this.closeMenu} />\r\n        <ToggleBtn menuIsOpen = {menuIsOpen} toggleMenu = {this.toggleMenu}  />\r\n        { menuIsOpen && <Backdrop onClick={this.closeMenu} /> }\r\n        {this.props.children}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout","import React from 'react'\r\nimport './QuizItem.scss';\r\n\r\nconst QuizItem = props => {\r\n\r\n  const renderAnswersList=()=>{\r\n    return(\r\n      <ul className = 'quiz-item__answers'>\r\n        {props.answers.map((answer, index)=>{\r\n          const stateClass = props.answerState? `quiz-item__answer_is_${props.answerState}`: '';\r\n          const classes = `quiz-item__answer ${ props.chosenAnswerId ===  answer.id? stateClass: ''}`;\r\n\r\n          return (\r\n            <li\r\n              className = {classes}\r\n              key = {answer.id}\r\n              answer ={answer}\r\n              onClick = {props.chooseHandler.bind(this, answer.id)} >\r\n                <span>{index+1}</span>\r\n                {answer.text}\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className = 'quiz-item'>\r\n      <p className = 'quiz-item__question '>\r\n        <span> {props.question} </span>\r\n        <span>{props.numberOfQuestion} из {props.numOfQuestions}</span>\r\n      </p>\r\n      {renderAnswersList()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuizItem","import React from 'react';\r\nimport './QuizResults.scss';\r\nimport Button from '../Button/Button';\r\n\r\nexport default function QuizResults (props){\r\n\r\n  const numOfCorrect = props.answersArray.reduce( (total, currentItem)=>{\r\n    return total + ( currentItem === 'correct'? 1: 0 )\r\n  }, 0 );\r\n\r\n  const renderAnswersList = () => (\r\n    <ul>\r\n      {props.answersArray.map( (item, index) => {\r\n        const iconClasses = item === 'correct'\r\n          ? 'fas fa-check-circle icon-success quiz-results__icon-success'\r\n          : 'far fa-times-circle icon-fail quiz-results__icon-fail';\r\n        return (\r\n          <li className='quiz-results__question' key = {index}>\r\n            <span>{index +1}. </span> \r\n            {props.quiz[index].question}\r\n            <i className={iconClasses}></i>\r\n          </li>\r\n        )}\r\n      )}\r\n    </ul>\r\n  )\r\n\r\n  return (\r\n    <div className = 'quiz-results' >\r\n      <h2 className = 'quiz-results__title'>Ваши ответы</h2>\r\n      {renderAnswersList()}\r\n      <p>Правильных ответов: {numOfCorrect} из {props.quiz.length}</p>\r\n      <div className='quiz-results__buttons'>\r\n        <Button\r\n          onClick={props.navigateToList}\r\n          theme='success'\r\n          classes='quiz-results__btn'>\r\n          Перейти в список тестов\r\n        </Button>\r\n        <Button\r\n          onClick={props.retryHandler}\r\n          theme='success'\r\n          classes='quiz-results__btn'>\r\n          Повторить\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport './Loader.css'\r\n\r\nexport default function Loader(props){\r\n  const classes =['loader', props.classes && `${props.classes}__loader`].join(' ');\r\n  return(\r\n    <div className={classes} /> \r\n  )\r\n}","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://react-quiz-b6c1f.firebaseio.com/'\r\n})","import React, {Component} from 'react'\r\nimport QuizItem from '../../Components/QuizItem/QuizItem'\r\nimport QuizResults from '../../Components/QuizResults/QuizResults'\r\nimport Loader from '../../Components/Loader/Loader'\r\nimport {withRouter} from 'react-router-dom'\r\nimport axios from '../../axios/axios';\r\n\r\nimport './Quiz.scss';\r\n\r\nclass Quiz extends Component{\r\n\r\n  state ={\r\n    chosenAnswerId: null,\r\n    quiz: [],\r\n    numberOfQuestion: 0,\r\n    answersArray: [],\r\n    isFinished: false,\r\n    loading: true\r\n  };\r\n\r\n  navigateToList = ()=>{\r\n    this.props.history.push({\r\n      pathname: '/quiz'\r\n    })\r\n  }\r\n\r\n  async componentDidMount(){\r\n    try{\r\n      const response = await axios.get('/quizes/'+this.props.match.params.id+'.json');\r\n      this.setState({\r\n        quiz: response.data,\r\n        loading: false\r\n      })\r\n    } catch (e){\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  retryHandler = () => {\r\n    this.setState({\r\n      chosenAnswerId: null,\r\n      numberOfQuestion: 0,\r\n      answersArray: [],\r\n      isFinished: false\r\n    })\r\n  }\r\n\r\n  chooseHandler = (chosenAnswerId) =>{\r\n    const {quiz, numberOfQuestion} = this.state;\r\n    const state = {...this.state};\r\n    const answersArray = [...state.answersArray];\r\n\r\n    if( answersArray[numberOfQuestion] ) return;\r\n\r\n    if (quiz[numberOfQuestion].rightAnswerId === chosenAnswerId) {\r\n        answersArray[numberOfQuestion] = 'correct'\r\n    } else{\r\n        answersArray[numberOfQuestion] = 'incorrect'\r\n    };\r\n\r\n    this.setState( {answersArray, chosenAnswerId} )\r\n\r\n    setTimeout( \r\n      ()=>{ \r\n        if (numberOfQuestion +1 !== quiz.length) {\r\n          this.setState( {numberOfQuestion: numberOfQuestion + 1} )\r\n        } else this.setState( {isFinished: true } )\r\n      }, 500)\r\n    } \r\n\r\n  render(){\r\n    const {quiz, numberOfQuestion, answersArray, isFinished, loading, chosenAnswerId} = this.state;\r\n    const quizItem = quiz[numberOfQuestion];\r\n    \r\n    return(\r\n      <div className ='quiz'>\r\n\r\n        { isFinished\r\n          ? <QuizResults \r\n            navigateToList = {this.navigateToList}\r\n            answersArray = {answersArray}\r\n            quiz = {quiz}\r\n            retryHandler = {this.retryHandler} />\r\n          : loading\r\n            ? <Loader classes='quiz' />\r\n            : <QuizItem\r\n                chosenAnswerId = {chosenAnswerId}\r\n                answerState = {answersArray[numberOfQuestion]}\r\n                rightAnswerId = {quizItem.rightAnswerId }\r\n                question = { quizItem.question }\r\n                numberOfQuestion = {numberOfQuestion+1}\r\n                numOfQuestions = { quiz.length }\r\n                answers = { quizItem.answers }\r\n                chooseHandler = {this.chooseHandler}\r\n            />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Quiz)","import React from 'react'\r\nimport './QuizPage.scss';\r\n\r\nimport Quiz from '../../Container/Quiz/Quiz'\r\n\r\nfunction QuizPage() {\r\n  return (\r\n    <div className = 'quiz-page'>\r\n      <h1 className ='quiz-page__header'>Тест</h1>\r\n      <Quiz />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuizPage","import React from 'react';\r\nimport './Input.scss';\r\n\r\n\r\nexport default function Input (props){\r\n  const {\r\n    htmlFor,\r\n    value = '',\r\n    onChange,\r\n    type= 'text',\r\n    label,\r\n    isValid,\r\n    errorMessage,\r\n    touched\r\n  } = props;\r\n\r\n  return (\r\n    <div className = 'input'>\r\n      <label \r\n        className = 'input__label'\r\n        htmlFor={htmlFor}>\r\n        {label}\r\n      </label>\r\n      <input\r\n        className = 'input__control'\r\n        id ={htmlFor}\r\n        type ={type}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      { !isValid && touched && <small className = 'input__message'>{errorMessage}</small>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import './AuthForm.scss';\r\nimport Button from '../Button/Button'\r\nimport Input from '../Input/Input'\r\n\r\nimport axios from 'axios'\r\nimport React, { Component } from 'react';\r\n\r\nconst initialState ={\r\n  authError: false,\r\n  isFormValid: false,\r\n  inputs: {\r\n    email: {\r\n      id: 1,\r\n      value: '',\r\n      type: 'email',\r\n      label: 'Email',\r\n      errorMessage: 'Wrong Email',\r\n      valid: false,\r\n      touched: false,\r\n      validation: {\r\n        required: true,\r\n      }\r\n    },\r\n    password: {\r\n      id: 2,\r\n      value: '',\r\n      type: 'password',\r\n      label: 'Password',\r\n      errorMessage: 'Wrong password',\r\n      valid: false,\r\n      touched: false,\r\n      validation: {\r\n        required: true,\r\n        minLength: 6\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass AuthForm extends Component {\r\n  state = {...initialState}\r\n\r\n  validateControl(value, validation){\r\n    if(!validation) return true;\r\n    let isValid = true;\r\n\r\n    if(validation.required){\r\n      isValid = value.trim()!=='' && isValid\r\n    }\r\n\r\n    if(validation.minLength){\r\n      isValid = value.length >= validation.minLength && isValid\r\n    }\r\n     return isValid\r\n  }\r\n\r\n \r\n  onChangeHandler = (inputName, event) => {\r\n    const inputs = {...this.state.inputs};\r\n    const input = {...inputs[inputName]};\r\n    input.touched = true;\r\n\r\n    inputs[inputName] = input;\r\n\r\n    input.value = event.target.value;\r\n    input.valid = this.validateControl(input.value, input.validation);\r\n\r\n    const isFormValid = Object.keys(inputs).every((key)=> {\r\n      return inputs[key].valid\r\n    });\r\n    \r\n    this.setState({inputs, isFormValid})\r\n  }\r\n\r\n  resetForm = () =>{\r\n     this.setState(initialState);\r\n  }\r\n\r\n\r\n  renderInputs() {\r\n    const inputs = Object.keys(this.state.inputs).map((inputName)=> {\r\n      const input = this.state.inputs[inputName];\r\n      return (\r\n        <Input \r\n          touched = {input.touched}\r\n          key = {inputName + input.id} \r\n          value = {input.value}\r\n          type = {input.type}\r\n          label = {input.label}\r\n          htmlFor = {`${inputName}-${input.id}`}\r\n          errorMessage = {input.errorMessage}\r\n          isValid = {input.valid}\r\n          onChange = { this.onChangeHandler.bind(this,inputName) }\r\n        />\r\n      )\r\n    });\r\n    return inputs\r\n  }\r\n\r\n  getAuthData = ()=>{\r\n    return {\r\n      email: this.state.inputs.email.value,\r\n      password: this.state.inputs.password.value,\r\n      returnSecureToken: true\r\n    }\r\n  }\r\n\r\n  loginHandler = async () => {\r\n    const authData = this.getAuthData();\r\n      \r\n    try {\r\n      const response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyCUszkptpA2BUXeBs6J3EBRTJpcx8KdYSc', authData)\r\n      if(response.data.registered) this.props.loginHandler();\r\n    } catch (e) {\r\n      this.setState({authError: 'loginError'})\r\n    }\r\n  }\r\n\r\n  registerHandler = async () => {\r\n    const authData = this.getAuthData();\r\n    try {\r\n      const response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyCUszkptpA2BUXeBs6J3EBRTJpcx8KdYSc', authData)\r\n      if(response) this.props.loginHandler();\r\n    } catch (e) {\r\n      this.setState({authError: 'regError'})\r\n    }\r\n  }\r\n\r\n  submitHandler =(event, action)=>{\r\n    event.preventDefault();\r\n    this.resetForm();\r\n  }\r\n\r\n\r\n  render() {\r\n    const {authError} = this.state;\r\n    const errorMessage = \r\n      (authError === 'loginError' && <p className = 'auth-form__message'>Ошибка авторизации!</p>) ||\r\n      (authError === 'regError' && <p className = 'auth-form__message'>Ошибка регистрации!</p>);\r\n\r\n    return (\r\n      <form action=\"\" onSubmit ={this.submitHandler} className = 'auth-form'>\r\n        {errorMessage}\r\n        { this.renderInputs() }\r\n        <div className = 'auth-form__buttons'>\r\n          <Button\r\n            disabled={!this.state.isFormValid} \r\n            onClick={this.loginHandler}\r\n            theme='success'\r\n            classes= 'auth-form__btn'>\r\n            Войти\r\n          </Button>\r\n          <Button\r\n            disabled={!this.state.isFormValid} \r\n            onClick={this.registerHandler}\r\n            theme='info'\r\n            classes= 'auth-form__btn'>\r\n            Зарегистрироваться\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport './AuthPage.scss';\r\nimport AuthForm from '../../Components/AuthForm/AuthForm'\r\n\r\nimport {Consumer} from '../../App'\r\n\r\nclass AuthPage extends React.Component {\r\n\r\n  render() {\r\n    return <Consumer>\r\n      {context => (\r\n        <div className='auth-page'>\r\n          <h1 className='auth-page__title'>Авторизация</h1>\r\n          <AuthForm loginHandler = {context.loginHandler}/>\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  }\r\n}\r\n\r\nexport default AuthPage;","import React from 'react';\r\nimport './Select.scss';\r\n\r\nexport default function Select (props){\r\n  const {\r\n    htmlFor,\r\n    value,\r\n    onChange,\r\n    label\r\n  } = props;\r\n\r\n  return (\r\n    <div className = 'select'>\r\n      <label \r\n        className = 'select__label'\r\n        htmlFor={htmlFor}>\r\n        {label}\r\n      </label>\r\n\r\n      <select\r\n        className = 'select__control'\r\n        id ={htmlFor}\r\n        value={value}\r\n        onChange={onChange}\r\n      >\r\n        {props.children}\r\n      </select>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n","import './CreateTestForm.scss';\r\nimport Button from '../../Components/Button/Button'\r\nimport Input from '../../Components/Input/Input'\r\nimport Select from '../../Components/Select/Select'\r\n\r\nimport axios from '../../axios/axios'\r\nimport React, { Component } from 'react';\r\n\r\n\r\nconst initialState ={\r\n  rightAnswerId: 1,\r\n  sendError: false,\r\n  submitting: false,\r\n  isFormValid: false,\r\n  quiz: [],\r\n  inputs: {\r\n    question: {\r\n      id: 0,\r\n      value: '',\r\n      type: 'text',\r\n      label: 'Введите вопрос',\r\n      errorMessage: 'Пустое поле',\r\n      valid: false,\r\n      touched: false,\r\n      validation: {\r\n        required: true,\r\n      }\r\n    },\r\n    option1: {\r\n      id: 1,\r\n      value: '',\r\n      type: 'text',\r\n      label: 'Вариант 1',\r\n      errorMessage: 'Пустое поле',\r\n      valid: false,\r\n      touched: false,\r\n      validation: {\r\n        required: true,\r\n      }\r\n    },\r\n    option2: {\r\n      id: 2,\r\n      value: '',\r\n      type: 'text',\r\n      label: 'Вариант 2',\r\n      errorMessage: 'Пустое поле',\r\n      valid: false,\r\n      touched: false,\r\n      validation: {\r\n        required: true,\r\n      }\r\n    },\r\n    option3: {\r\n      id: 3,\r\n      value: '',\r\n      type: 'text',\r\n      label: 'Вариант 3',\r\n      errorMessage: 'Пустое поле',\r\n      valid: false,\r\n      touched: false,\r\n      validation: {\r\n        required: true,\r\n      }\r\n    },\r\n    option4: {\r\n      id: 4,\r\n      value: '',\r\n      type: 'text',\r\n      label: 'Вариант 4',\r\n      errorMessage: 'Пустое поле',\r\n      valid: false,\r\n      touched: false,\r\n      validation: {\r\n        required: true,\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\nclass CreateTestForm extends Component {\r\n  state = {...initialState}\r\n\r\n  validateControl(value, validation){\r\n    if(!validation) return true;\r\n    let isValid = true;\r\n\r\n    if(validation.required){\r\n      isValid = value.trim()!=='' && isValid\r\n    }\r\n\r\n    if(validation.minLength){\r\n      isValid = value.length >= validation.minLength && isValid\r\n    }\r\n     return isValid\r\n  }\r\n\r\n \r\n  onChangeHandler = (inputName, event) => {\r\n    const inputs = {...this.state.inputs};\r\n    const input = {...inputs[inputName]};\r\n    input.touched = true;\r\n\r\n    inputs[inputName] = input;\r\n\r\n    input.value = event.target.value;\r\n    input.valid = this.validateControl(input.value, input.validation);\r\n\r\n    const isFormValid = Object.keys(inputs).every((key)=> {\r\n      return inputs[key].valid\r\n    });\r\n    \r\n    this.setState({inputs, isFormValid})\r\n  }\r\n\r\n  resetForm = () =>{\r\n     this.setState(initialState);\r\n  }\r\n\r\n\r\n  renderInputs() {\r\n    const inputs = Object.keys(this.state.inputs).map((inputName)=> {\r\n      const input = this.state.inputs[inputName];\r\n      return (\r\n        <Input\r\n          touched = {input.touched}\r\n          key = {inputName + input.id} \r\n          value = {input.value}\r\n          type = {input.type}\r\n          label = {input.label}\r\n          htmlFor = {`${inputName}`}\r\n          errorMessage = {input.errorMessage}\r\n          isValid = {input.valid}\r\n          onChange = { this.onChangeHandler.bind(this,inputName) }\r\n        />\r\n      )\r\n    });\r\n    return inputs\r\n  }\r\n\r\n  addQuestion=()=>{\r\n    const {\r\n      rightAnswerId,\r\n      isFormValid, \r\n      inputs:{question,option1,option2,option3,option4},\r\n    } = this.state;\r\n\r\n    if(!isFormValid) return;\r\n\r\n    const quiz = [...this.state.quiz];\r\n\r\n    quiz.push({\r\n      question: question.value,\r\n      answers: [\r\n        { text: option1.value, id: option1.id},\r\n        { text: option2.value, id: option2.id},\r\n        { text: option3.value, id: option3.id},\r\n        { text: option4.value, id: option4.id},\r\n      ],\r\n      rightAnswerId\r\n    });\r\n\r\n    this.setState({\r\n      ...initialState, quiz\r\n    })\r\n  }\r\n\r\n  createTest= async e =>{\r\n    try {\r\n      await axios.post('/quizes.json', this.state.quiz);\r\n      this.setState(initialState);\r\n    } catch (e){\r\n      console.log(e);\r\n      this.setState({sendError: true});\r\n    }\r\n  }\r\n\r\n  selectChangeHandler = event => {\r\n    this.setState({rightAnswerId: +event.target.value})\r\n  }\r\n\r\n  submitHandler =(event, action)=>{\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n  render() {\r\n    const {sendError,rightAnswerId, quiz, isFormValid} = this.state;\r\n    const errorMessage = \r\n      (sendError && <p className = 'create-test-form__message'>Ошибка при создании теста</p>)\r\n\r\n    return (\r\n      <form action=\"\" onSubmit ={this.submitHandler} className = 'create-test-form'>\r\n        {errorMessage}\r\n        { this.renderInputs() }\r\n        <Select\r\n          value = {rightAnswerId}\r\n          htmlFor = 'select'\r\n          onChange = {this.selectChangeHandler}\r\n          label = 'Номер правильного ответа'>\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n          <option value=\"4\">4</option>\r\n        </Select>\r\n\r\n        <div className = 'create-test-form__buttons'>\r\n          <Button\r\n            disabled={!isFormValid}\r\n            onClick={this.addQuestion}\r\n            theme='success'\r\n            classes='create-test-form__btn'>\r\n            Добавить вопрос\r\n          </Button>\r\n          <Button\r\n            disabled={!quiz.length} \r\n            onClick={this.createTest}\r\n            classes='create-test-form__btn'\r\n            theme='info'>\r\n            Создать тест\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTestForm;","import React from 'react';\r\nimport './CreateTestPage.scss';\r\nimport CreateTestForm from '../../Container/CreateTestForm/CreateTestForm'\r\n\r\nclass CreateTestPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='create-test-page'>\r\n        <h1 className='create-test-page__title'>Создание теста</h1>\r\n        <CreateTestForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTestPage;","import React, { Component } from 'react';\r\nimport axios from '../../axios/axios';\r\n\r\nimport './QuizListPage.scss';\r\n\r\nimport {NavLink} from 'react-router-dom'\r\nimport Loader from '../../Components/Loader/Loader'\r\n\r\n\r\nclass QuizListPage extends Component {\r\n\r\n  state = {\r\n    quizes: [],\r\n    isListLoaded: false\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try{\r\n      const response = await axios.get('/quizes.json');\r\n\r\n      const quizes = Object.keys(response.data).map( (quizKey, index) => {\r\n          return {id: quizKey, name: `Тест №${index+1}`}\r\n      });\r\n\r\n      this.setState({ quizes , isListLoaded: true})\r\n    } catch (e){\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  renderQuizes(){\r\n    return this.state.quizes.map( (quiz)=>(\r\n      <li className='quiz-list__item' key={quiz.id}>\r\n        <NavLink className='quiz-list__link' to={'/quiz/'+quiz.id}>\r\n          {quiz.name}\r\n        </NavLink>\r\n      </li>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    const list = \r\n      <ul className= 'quiz-list'>\r\n        { this.renderQuizes() }\r\n      </ul>\r\n      \r\n    return (\r\n      <div className='quiz-list-page'>\r\n        <h1 className='quiz-list-page__header'>Список тестов</h1>\r\n        {this.state.isListLoaded\r\n          ? list\r\n          : <Loader className ='quiz-list-page__loader' />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuizListPage;","import React, { Component } from 'react';\r\nimport Layout from './Container/Layout/Layout';\r\nimport QuizPage from './Components/QuizPage/QuizPage'\r\nimport AuthPage from './Container/AuthPage/AuthPage'\r\nimport CreateTestPage from './Components/CreateTestPage/CreateTestPage'\r\nimport QuizListPage from './Container/QuizListPage/QuizListPage'\r\nimport {Route, Switch, withRouter} from 'react-router-dom'\r\n\r\nexport const {Provider, Consumer} = React.createContext();\r\n\r\nclass App extends Component {\r\n  state = {authorized: false}\r\n\r\n  logoutHandler=()=>{\r\n    this.setState({authorized: false});\r\n    this.props.history.push({\r\n      pathname: '/quiz'\r\n    })\r\n  }\r\n\r\n  loginHandler=()=>{\r\n    this.setState({authorized: true});\r\n    this.props.history.push({\r\n      pathname: '/quiz'\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const context = {loginHandler: this.loginHandler, logoutHandler: this.logoutHandler, authorized: this.state.authorized };\r\n    \r\n    return (\r\n      <Provider value = {context}>\r\n        <div className=\"App\">\r\n          <Layout >\r\n            <Switch>\r\n              <Route path='/quiz/auth' component={AuthPage}/>\r\n              <Route path='/quiz/quiz-creator' component={CreateTestPage}/>\r\n              <Route path='/quiz/:id' component={QuizPage}/>\r\n              <Route path='/quiz' exact component={QuizListPage}/>\r\n            </Switch>\r\n          </Layout>\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './css/normalize.css';\r\nimport './css/custom_reset.css';\r\nimport './css/styles.css';\r\n\r\nconst app = (\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}